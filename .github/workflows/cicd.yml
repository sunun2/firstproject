name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Build with Gradle - 1
        run: |
          ./gradlew build
          cp build/libs/*-SNAPSHOT.jar ./app.jar

      - name: Setup SSH Key - 2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy JAR to EC2 - 3
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          scp -i ~/.ssh/id_rsa ./app.jar $EC2_USER@$EC2_HOST:~

      - name: Restart Application on EC2 - 4
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -T -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << 'EOF_SCRIPT'
            # 실행 중인 app.jar 프로세스가 있으면 종료
            PID=$(pgrep -f "app.jar")
            if [ ! -z "$PID" ]; then
              echo "Stopping existing application (PID: $PID)..."
              kill -9 $PID
              sleep 3  # 프로세스 종료 대기
            fi

            # 최신 JAR 파일 실행
            echo "Starting new application..."
            nohup java -jar ./app.jar > ./app.log 2>&1 &
            echo "Application restarted successfully."
          EOF_SCRIPT